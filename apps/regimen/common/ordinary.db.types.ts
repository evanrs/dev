// Generated by https://quicktype.io
//
// To change quicktype's target language, run command:
//
//   "Set quicktype target language"

export interface OrdinaryDBSample {
  database: Database;
  pages: Page[];
}

export interface Database {
  object: string;
  id: string;
  cover: null;
  icon: null;
  created_time: string;
  last_edited_time: string;
  title: TitleElement[];
  properties: DatabaseProperties;
  parent: DatabaseParent;
  url: string;
}

export interface DatabaseParent {
  type: string;
  page_id: string;
}

export interface DatabaseProperties {
  'conflict.from': ConflictFromClass;
  'conflict.to': ConflictFromClass;
  category: ConflictFromClass;
  'db.role': ConflictFromClass;
  name: ConflictFromClass;
}

export interface ConflictFromClass {
  id: string;
  name: string;
  type: string;
  select?: Select;
  relation?: CategoryRelation;
  title?: CategoryTitle;
}

export interface CategoryRelation {
  database_id: string;
  synced_property_name: string;
  synced_property_id: SyncedPropertyID;
}

export enum SyncedPropertyID {
  JCu = '_JCu',
  PpK = 'Pp_K',
}

export interface Select {
  options: Option[];
}

export interface Option {
  id: string;
  name: string;
  color: string;
}

export interface CategoryTitle {}

export interface TitleElement {
  type: TitleType;
  text: Text;
  annotations: Annotations;
  plain_text: string;
  href: null;
}

export interface Annotations {
  bold: boolean;
  italic: boolean;
  strikethrough: boolean;
  underline: boolean;
  code: boolean;
  color: Color;
}

export enum Color {
  Default = 'default',
}

export interface Text {
  content: string;
  link: null;
}

export enum TitleType {
  Text = 'text',
}

export interface Page {
  object: Object;
  id: string;
  created_time: string;
  last_edited_time: string;
  cover: null;
  icon: null;
  parent: PageParent;
  archived: boolean;
  properties: PageProperties;
  url: string;
}

export enum Object {
  Page = 'page',
}

export interface PageParent {
  type: ParentType;
  database_id: string;
}

export enum ParentType {
  DatabaseID = 'database_id',
}

export interface PageProperties {
  'conflict.from': Conflict;
  'conflict.to': Conflict;
  category: PurpleCategory;
  'db.role': PurpleCategory;
  name: Name;
}

export interface PurpleCategory {
  id: CategoryID;
  type: CategoryType;
  select: Option | null;
}

export enum CategoryID {
  A3Dy7C = 'a%3Dy%7C',
  AMLk = 'aMLk',
}

export enum CategoryType {
  Select = 'select',
}

export interface Conflict {
  id: SyncedPropertyID;
  type: ConflictFromType;
  relation: RelationElement[];
}

export interface RelationElement {
  id: string;
}

export enum ConflictFromType {
  Relation = 'relation',
}

export interface Name {
  id: TypeEnum;
  type: TypeEnum;
  title: TitleElement[];
}

export enum TypeEnum {
  Title = 'title',
}
